#%RAML 0.8
---
title: Ymir
baseUri: http://ymirrpg/api/{version}
version: v1

/worlds:
  get:
    description: Get list of all worlds
    queryParameters:
      chronological: 
        type: boolean
        required: false
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": 1,
                  "name": "The World",
                  "lastUpdated": "2012-04-23T18:25:43.511Z",
                },
                {
                  "id": 2,
                  "name": "Another World",
                  "lastUpdated": "2012-04-23T18:25:43.511Z",
                }
              ]
  post: 
    description: Create a new world
    queryParameters:
      name:
        type: string
        required: true
    responses:
      200:
  /{worldId}:
    get: 
      description: Get the world where `id == {worldId}`
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": 1,
                  "name": "World name",
                  "lastUpdated": "2012-04-23T18:25:43.511Z",
                }
        404:
    put:
      description: Update the world where `id == {worldId}`
      responses:
        200:
    delete:
      description: Delete the world where `id == {worldId}`
      responses:
        204:
        404:

    /characters:
      get:
        queryParameters:
          chronological: 
            type: boolean
            required: false
        description: Get list of all characters
        responses:
          200:
            body:
              application/json:
                example: |
                  [
                    {
                      "id": 1,
                      "name": "Skyler Berg",
                      "place_id": 1,
                      "world_id": 1,
                      "lastUpdated": "2012-04-23T18:25:43.511Z",
                    },
                    {
                      "id": 2,
                      "name": "Jeff Bayes",
                      "place_id": 1,
                      "world_id": 1,
                      "lastUpdated": "2012-04-23T18:25:43.511Z",
                    }
                  ]
      post:
        description: Create a new character
        queryParameters:
          name:
            type: string
            required: true
          place_id:
            type: string
            required: false
        responses:
          200:
      /{characterId}:
        get:
          description: Get the character where `id == {characterId}`
          queryParameters:
            place_id:
              type: integer
              required: false
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "id": 1,
                      "name": "Skyler Berg",
                      "place_id": 1,
                      "world_id": 1,
                      "lastUpdated": "2012-04-23T18:25:43.511Z",
                    },
            404:
        put:
          description: Update the character where `id == {characterId}`
          queryParameters:
            name:
              type: string
              required: false
            placeId:
              type: string
              required: false
          responses:
            200:
            404:
        delete:
          description: Delete the character where `id == {characterId}`
          responses:
            204:
            404:

    /places:
      get:
        description: Get list of all places in a world
        queryParameters:
          chronological: 
            type: boolean
            required: false
        responses:
          200:
            body:
              application/json:
                example: |
                  [
                    {
                      "id": 1,
                      "name": "University of Oregon"
                      "world_id": 1,
                      "lastUpdated": "2012-04-23T18:25:43.511Z",
                    },
                  ]
      post:
        description: Create a new place
        queryParameters:
          name:
            type: string
            required: true
        responses:
          200:
      /{placeId}:
        get:
          description: Get the place where `id == {placeId}`
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "id": 1,
                      "name": "University of Oregon"
                      "world_id": 1,
                    },
            404:
        put:
          description: Update the place where `id == {placeId}`
          responses:
            200:
            404:
        delete:
          description: Delete the place where `id == {placeId}`
          responses:
            204:
            404:
    /items:
      get:
        description: Get list of all items in a world
        queryParameters:
          place_id:
            type: string
            required: false
          character_id:
            type: string
            required: false
          chronological: 
            type: boolean
            required: false
        responses:
          200:
            body:
              application/json:
                example: |
                  [
                    {
                      "id": 1,
                      "name": "Sword"
                      "world_id": 1,
                      "place_id": null,
                      "character_id": 1,
                      "lastUpdated": "2012-04-23T18:25:43.511Z",
                    },
                  ]
      post:
        description: Create a new item
        queryParameters:
          name:
            type: string
            required: true
          place_id:
            type: string
            required: false
          character_id:
            type: string
            required: false
        responses:
          200:
      /{itemId}:
        get:
          description: Get the item where `id == {itemId}`
          responses:
            200:
              body:
                application/json:
                  example: |
                    {
                      "id": 1,
                      "name": "Sword"
                      "world_id": 1,
                      "place_id": null,
                      "character_id": 1,
                      "lastUpdated": "2012-04-23T18:25:43.511Z",
                    }
            404:
        put:
          description: Update the item where `id == {itemId}`
          responses:
            200:
            404:
        delete:
          description: Delete the item where `id == {itemId}`
          responses:
            204:
            404:
